[package]
name = "py32f030-heap-alloc"
version = "0.4.0"
edition = "2021"

[dependencies]
py32-hal = { path = "../../", features = [ "time-driver-tim3", "py32f030k28"]}

# This is necessary because `py32-hal` uses `portable-atomic`,
# but Cortex-M0 does not provide Atomic (CAS) support.
portable-atomic = { version = "1", features = ["critical-section"] }

cortex-m-rt = "0.7"
panic-probe = { version = "1", features = ["print-defmt"] }

embassy-sync = { version = "0.7", features = ["defmt"] }
embassy-executor = { version = "0.9.1", features = ["arch-cortex-m", "executor-thread", "defmt"] }
embassy-time = { version = "0.5.0", features = ["defmt", "defmt-timestamp-uptime", "tick-hz-32_768"] }

defmt = { version = "1", features = ["alloc"] }
defmt-rtt = "1"
embedded-alloc = { version = "0.6.0" }

# cargo build/run
[profile.dev]
codegen-units = 1
debug = 2
debug-assertions = true # <-
incremental = false
opt-level = 'z'         # <-
overflow-checks = true  # <-

# cargo build/run --release
[profile.release]
codegen-units = 1
debug = 2
debug-assertions = false # <-
incremental = false
lto = 'fat'
opt-level = 3            # <-
overflow-checks = false  # <-

