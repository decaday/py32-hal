[package]
name = "py32f072-examples"
version = "0.4.0"
edition = "2021"

[dependencies]
py32-hal = { path = "../../", features = [ "time-driver-tim15", "py32f072c1b", "embassy-usb-driver-impl"]}

# This is necessary because `py32-hal` uses `portable-atomic`,
# but Cortex-M0 does not provide Atomic (CAS) support.
portable-atomic = { version = "1", features = ["critical-section"] }

cortex-m = { version = "0.7.7", features = [
    "critical-section-single-core",
    "critical-section",
] }
cortex-m-rt = "0.7.3"
cortex-m-semihosting = { version = "0.5" }
panic-halt = "1.0.0"
panic-probe = { version = "1.0.0", features = ["print-defmt"] }

embassy-sync = { version = "0.7.1", features = ["defmt"] }
embassy-executor = { version = "0.9.1", features = ["arch-cortex-m", "executor-thread", "defmt"] }
embassy-time = { version = "0.5.0", features = ["defmt", "defmt-timestamp-uptime", "tick-hz-32_768"] }
embassy-futures = "0.1.1"
embassy-usb = { version = "0.5.0", features = [ "defmt"]}
usbd-hid = "0.8.2"

embedded-io = { version = "0.6.0" }
embedded-io-async = { version = "0.6.1" }
defmt = "1"
defmt-rtt = "1"
# embassy-usb-logger = "0.2.0"
log = "0.4"
static_cell = "2.1"
heapless = "0.9"

# cargo build/run
[profile.dev]
codegen-units = 1
debug = 2
debug-assertions = true # <-
incremental = false
opt-level = 'z'         # <-
overflow-checks = true  # <-

# cargo build/run --release
[profile.release]
codegen-units = 1
debug = 2
debug-assertions = false # <-
incremental = false
lto = 'fat'
opt-level = 3            # <-
overflow-checks = false  # <-

