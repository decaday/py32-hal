[package]
name = "py32f072-usbd-examples"
version = "0.4.0"
edition = "2021"

[dependencies]
py32-hal = { path = "../../", default-features = false, features = [ 
    "py32f072c1b", 
    "defmt", 
    "rt", 
    "memory-x", 
    "usb-device-impl",
]}

# This is necessary because `py32-hal` uses `portable-atomic`,
# but Cortex-M0 does not provide Atomic (CAS) support.
portable-atomic = { version = "1", features = ["critical-section"] }

panic-halt = "1.0.0"
cortex-m = { version = "0.7.7", features = [
    "critical-section-single-core",
    "critical-section",
] }
cortex-m-rt = "0.7.3"
cortex-m-semihosting = { version = "0.5" }
panic-probe = { version = "1.0.0", features = ["print-defmt"] }

defmt = "1"
defmt-rtt = "1"
static_cell = "2.1"

usbd-human-interface-device = { version = "0.6", features = [ "defmt"]}
usbd-serial = "0.2.2"
usb-device = "0.3.2"


# cargo build/run
[profile.dev]
codegen-units = 1
debug = 2
debug-assertions = true # <-
incremental = false
opt-level = 'z'         # <-
overflow-checks = true  # <-

# cargo build/run --release
[profile.release]
codegen-units = 1
debug = 2
debug-assertions = false # <-
incremental = false
lto = 'fat'
opt-level = 3            # <-
overflow-checks = false  # <-

